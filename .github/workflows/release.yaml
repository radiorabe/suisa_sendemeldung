name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare additional Metadata
        id: additional_meta
        run: |
          echo created=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> $GITHUB_OUTPUT

      - name: Prepare Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/radiorabe/suisasendemeldung
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            name=suisasendemeldung
            summary=${{ github.event.repository.description }}
            url=${{ github.event.repository.html_url }}
            vcs-ref=${{ github.sha }}
            revision=${{ github.sha }}
            release=${{ github.sha }}
            build-date=${{ steps.additional_meta.outputs.created }}
            io.k8s.display-name=RaBe SUISA Sendemeldung
            io.k8s.description=${{ github.event.repository.description }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - run: python -m pip install --upgrade pip

      - run: pip install -r requirements-dev.txt

      - name: Build Wheel
        run: python setup.py sdist bdist_wheel

      - name: Run twine
        if: github.event_name != 'pull_request'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.RABE_PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: true
        run: twine upload dist/*
